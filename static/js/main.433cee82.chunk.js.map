{"version":3,"sources":["App.js","index.js","trash.svg"],"names":["ListItem","props","className","itemData","isComplete","onClick","markComplete","index","description","src","trash","alt","deleteTask","App","useState","taskInput","updateTaskInput","toDoList","updateToDOList","addNote","length","push","splice","filter","item","i","list","role","aria-label","value","onKeyDown","event","keyCode","onChange","target","map","toDoObject","key","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iOA8DA,SAASA,EAASC,GAAQ,IAAD,EACrB,OACI,yBAAKC,UAAU,kCACX,0BAAMA,UAAWD,EAAME,SAASC,WAAa,gBAAkB,GACzDC,QAAS,kBAAMJ,EAAMK,aAAaL,EAAMM,SAASN,EAAME,SAASC,WAAf,UAAmC,GAD1F,iBACoGH,EAAME,gBAD1G,aACoG,EAAgBK,aACpH,yBAAKN,UAAU,cAAcO,IAAKC,IAAOC,IAAI,cACxCN,QAAS,kBAAMJ,EAAMW,WAAWX,EAAMM,WAKxCM,MAtEf,WAAgB,IAAD,EAC0BC,mBAAS,IADnC,mBACJC,EADI,KACOC,EADP,OAEwBF,mBAAS,IAFjC,mBAEJG,EAFI,KAEMC,EAFN,KAcLC,EAAU,WACPJ,GAAcA,EAAUK,SAE7BH,EAASI,KATF,CACHb,YAQwBO,EAPxBX,YAOmC,IACvCc,EAAeD,GACfD,EAAgB,MAGdJ,EAAa,SAACL,GAChB,IAAIe,EAASL,EAASM,QAAO,SAACC,EAAMC,GAAP,OAAaA,IAAMlB,KAChDW,EAAeI,IAGbhB,EAAe,SAACC,GAClB,IAAMmB,EAAI,YAAOT,GACjBS,EAAKnB,GAAOH,YAAcsB,EAAKnB,GAAOH,WACtCc,EAAeQ,IAGnB,OACI,yBAAKxB,UAAU,kBACX,uBAAGA,UAAU,gBAAb,oBAA6C,0BAAMyB,KAAK,MAAMC,aAAW,SAA5B,iBAC7C,yBAAK1B,UAAU,yBACX,yBAAKA,UAAU,OACX,2BACIA,UAAU,aACV2B,MAAOd,EACPe,UArCC,SAACC,GACI,KAAlBA,EAAMC,SAAgBb,KAqCVc,SAAU,SAACF,GAAD,OAAWf,EAAgBe,EAAMG,OAAOL,UAEtD,4BAAQ3B,UAAU,aAAaG,QAASc,GAAxC,SAIK,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAUG,QACPH,EAASkB,KAAI,SAACC,EAAY7B,GAAb,OACT,kBAACP,EAAD,CAAUqC,IAAK9B,EAAOJ,SAAUiC,EAAY9B,aAAcA,EAChDC,MAAOA,EAAOK,WAAYA,OACxC,uBAAGV,UAAU,gBAAe,0BAAMyB,KAAK,MAAMC,aAAW,SAA5B,gBAA5B,yBAER,uBAAG1B,UAAU,eAAb,oBCpDZoC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.433cee82.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport trash from './trash.svg'\n\nfunction App() {\n    const [taskInput, updateTaskInput] = useState(\"\");\n    const [toDoList, updateToDOList] = useState([]);\n\n    const inputKeyDown = (event) => {\n        if (event.keyCode === 13) addNote();\n    };\n    const getTaskObject = (description, isComplete) => {\n        return {\n            description,\n            isComplete\n        }\n    }\n\n    const addNote = () => {\n        if (!taskInput || !taskInput.length)\n            return;\n        toDoList.push(getTaskObject(taskInput, false));\n        updateToDOList(toDoList);\n        updateTaskInput(\"\")\n    };\n\n    const deleteTask = (index) => {\n        let splice = toDoList.filter((item, i) => i !== index);\n        updateToDOList(splice);\n    }\n\n    const markComplete = (index) => {\n        const list = [...toDoList]\n        list[index].isComplete = !list[index].isComplete\n        updateToDOList(list)\n    }\n\n    return (\n        <div className=\"app-background\">\n            <p className=\"heading-text\">React To Do List <span role=\"img\" aria-label=\"react\">ðŸ”¥</span></p>\n            <div className=\"task-container column\">\n                <div className=\"row\">\n                    <input\n                        className=\"text-input\"\n                        value={taskInput}\n                        onKeyDown={inputKeyDown}\n                        onChange={(event) => updateTaskInput(event.target.value)}\n                    />\n                    <button className=\"add-button\" onClick={addNote}>\n                        ADD\n                    </button>\n                </div>\n                {toDoList?.length ?\n                    toDoList.map((toDoObject, index) =>\n                        <ListItem key={index} itemData={toDoObject} markComplete={markComplete}\n                                  index={index} deleteTask={deleteTask}/>) :\n                    <p className=\"no-item-text\"><span role=\"img\" aria-label=\"react\">ðŸ“Œ</span> &nbsp;No Task Added !</p>}\n            </div>\n            <p className=\"footer-text\">The Indian Dev</p>\n        </div>\n    );\n}\n\nfunction ListItem(props) {\n    return (\n        <div className=\"list-item row jc-space-between\">\n            <span className={props.itemData.isComplete ? 'task-complete' : ''}\n                  onClick={() => props.markComplete(props.index)}>{props.itemData.isComplete ? `âœ… ` : ''}&nbsp;{props.itemData?.description}</span>\n            <img className=\"delete-icon\" src={trash} alt=\"delete-task\"\n                 onClick={() => props.deleteTask(props.index)}/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/trash.465dbcf2.svg\";"],"sourceRoot":""}